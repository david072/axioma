name: CD

on:
  push:
    tags: "*"

jobs:
  code-analysis:
    uses: ./.github/workflows/code-analysis.yml

  build-linux:
    name: Linux Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Rust Toolchain
        uses: dtolnay/rust-toolchain@stable
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Build
        run: cargo build -p cli --release && cargo build -p gui --release
      - name: Rename
        run: mv ./target/release/cli ./target/release/cli-linux &&  mv ./target/release/gui ./target/release/gui-linux
      - name: Upload CLI
        uses: actions/upload-artifact@v3
        with:
          name: cli-linux
          path: ./target/release/cli-linux
          if-no-files-found: error
      - name: Upload GUI
        uses: actions/upload-artifact@v3
        with:
          name: gui-linux
          path: ./target/release/gui-linux
          if-no-files-found: error

  build-windows:
    name: Windows Build
    runs-on: windows-latest

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install WiX
        run: nuget install WiX
      - name: Install Rust Toolchain
        uses: dtolnay/rust-toolchain@stable
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Build CLI
        run: cargo build -p cli --release
      - name: Build GUI (installer)
        run: |
          cargo build -p gui --release
          ./WiX.*/tools/candle.exe -nologo -arch "x64" -ext WixUIExtension -ext WixUtilExtension \
            -out "./funcially.wixobj" "gui/installers/wix/funcially.wxs"
          ./WiX.*/tools/light.exe -nologo -ext WixUIExtension -ext WixUtilExtension \
            -out "./funcially-${GITHUB_REF##*/}-installer.msi" -sice:ICE61 -sice:ICE91 \
            "./funcially.wixobj"
      - name: Rename
        run: mv ./target/release/cli.exe ./target/release/cli-windows.exe
      - name: Upload CLI
        uses: actions/upload-artifact@v3
        with:
          name: cli-windows
          path: ./target/release/cli-windows.exe
          if-no-files-found: error
      - name: Upload GUI
        uses: actions/upload-artifact@v3
        with:
          name: gui-windows
          path: ./funcially-*-installer.msi
          if-no-files-found: error

  build-macos:
    name: Macos Build
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Rust Toolchain
        uses: dtolnay/rust-toolchain@stable
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Build CLI
        run: cargo build -p cli --release
      - name: Build GUI (installer)
        run: |
          cargo build -p gui --release
          mkdir ./gui/installers/macos/funcially.app/Contents/MacOS
          cp ./target/release/gui ./gui/installers/macos/funcially.app/Contents/MacOS/funcially
          hdiutil create funcially-${GITHUB_REF##*/}.dmg -volname funcially -srcfolder gui/installers/macos -ov
      - name: Rename
        run: mv ./target/release/cli ./target/release/cli-macos
      - name: Upload CLI
        uses: actions/upload-artifact@v3
        with:
          name: cli-macos
          path: ./target/release/cli-macos
          if-no-files-found: error
      - name: Upload GUI
        uses: actions/upload-artifact@v3
        with:
          name: gui-macos
          path: ./funcially-*.dmg
          if-no-files-found: error

  release:
    name: Release
    if: github.repository == 'david072/funcially'
    needs: [ code-analysis, build-linux, build-windows, build-macos ]
    runs-on: ubuntu-latest
    
    steps:
      - name: Get Release Version
        id: get_release
        run: echo ::set-output name=version::${GITHUB_REF:10}
      - name: Download Artifacts
        uses: actions/download-artifact@v3
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          body: |
            <details>
              <summary><h2>Changelog</h2></summary>
            
              ## Fixed
              - TODO
              ## Changed
              - TODO
              ## Added
              - TODO
            </details>
            
            **You can find the Web Version at https://funcially.com/app.**
          files: |
            gui-linux/gui-linux
            gui-windows/funcially-*-installer.msi
            gui-macos/funcially-*.dmg
            cli-linux/cli-linux
            cli-windows/cli-windows.exe
            cli-macos/cli-macos
          fail_on_unmatched_files: true
          draft: true
